@using CarpetStoreAndManagement.ViewModels.InventoryViewModels
@model ProductsInInventoryViewModel

<div class="d-flex justify-content-between">
    <form asp-controller="Inventory" asp-action="Add">
        <label>
                <p class="label-txt">Add inventory name</p>
                <input asp-for="@Model.InventoryName" type="text" value="">
                <div class="line-box">
                    <div class="line"></div>
                </div>
        </label>
        <button type="submit" class="btn btn-success">Add</button>
    </form>
    <form asp-controller="Inventory" asp-action="ProductsBySearch">
        <div>
            <label>
                <p class="label-txt text-center">Inventory name</p>
                <select asp-for="@Model.InventoryName" class="form-control">
                    @foreach (var inventory in Model.Inventories)
                    {
                        <option value="@inventory.Name">@inventory.Name</option>
                    }
                </select>
            </label>
            <label>
                <p class="label-txt text-center">Color</p>
                <select asp-for="@Model.Color" class="form-control">
                    @foreach (var color in Model.Colors)
                    {
                        <option value="@color.Name">@color.Name</option>
                    }
                </select>
            </label>
            <label>
                <p class="label-txt text-center">Type</p>
                <select asp-for="@Model.Type" class="form-control">
                    @foreach (var type in Model.Types)
                    {
                        <option value="@type">@type</option>
                    }
                </select>
            </label>
            <button type="submit" class="btn btn-success">Search</button>
        </div>
    </form>
</div>


<h3 class="text-center">Products</h3>
<table id="sailorTable" class="table table-striped table-bordered" width="100%">
    <thead>
        <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Primary color</th>
            <th>Secondary color</th>
            <th>Price</th>
            <th>Invenotry name</th>
            <th>Quantity</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.Products)
        {
            <tr>
                <td>@product.Product.Name</td>
                <td>@product.Product.Type</td>
                <td>@product.Product.ProductColors.Where(x => x.ProductId == product.ProductId).Select(x => x.Color.Name).FirstOrDefault()</td>
                @if (@product.Product.ProductColors.Where(x => x.ProductId == product.Product.Id).Count() < 2)
                {
                    <td>N/A</td>

                }
                else
                {
                    <td>@product.Product.ProductColors.Where(x => x.ProductId == product.Product.Id).Select(x => x.Color.Name).LastOrDefault()</td>
                }
                <td>@product.Product.Price</td>
                <td>@product.Inventory.Name</td>
                <td>@product.Quantity</td>
            </tr>
        }

</table>